/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
    id "maven-publish"
}

dependencies {
    implementation "io.aiven:tiered-storage-for-apache-kafka-storage-core:$aivenTieredStorageVersion"

    implementation "commons-io:commons-io:$apacheCommonsIOVersion"
    implementation("org.apache.hadoop:hadoop-common:$hadoopVersion") {
        exclude group: "com.fasterxml.jackson.core"
        exclude group: "org.slf4j"
    }
    implementation("org.apache.hadoop:hadoop-hdfs-client:$hadoopVersion") {
        exclude group: "com.fasterxml.jackson.core"
        exclude group: "org.slf4j"
    }

    testImplementation "junit:junit:$junitVersion"

    testImplementation("org.apache.hadoop:hadoop-minicluster:$hadoopVersion") {
        exclude group: "com.fasterxml.jackson.core"
        exclude group: "org.slf4j"
    }
    testImplementation "io.aiven:tiered-storage-for-apache-kafka-storage-core:$aivenTieredStorageVersion:test-fixtures"
}

sourceSets {
    integrationTest {
        java {
            srcDirs = ['src/integration-test/java']
        }
        resources {
            srcDirs = ['src/integration-test/resources']
        }

        compileClasspath += sourceSets.main.output + configurations.testRuntimeClasspath
        runtimeClasspath += output + compileClasspath
    }
}

tasks.register('integrationTest', Test) {
    description = 'Runs the integration tests.'
    group = 'verification'
    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath

    shouldRunAfter test, distTar

    useJUnitPlatform()

    // Run always.
    outputs.upToDateWhen { false }
}

check.configure {
    dependsOn tasks.named("integrationTest")
}

configurations {
    integrationTestImplementation.extendsFrom testImplementation
    integrationTestRuntime.extendsFrom testRuntimeClasspath
}

idea {
    module {
        testSourceDirs += sourceSets.integrationTest.java.srcDirs
        testSourceDirs += sourceSets.integrationTest.resources.srcDirs
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId "io.arenadata"
            artifactId "hdfs-kafka-tiered-storage-backend"
            from components.java
        }
    }
}
